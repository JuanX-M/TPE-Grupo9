# ADR 03: Implementación de API Gateway con Servicios REST para la Gestión de Solicitudes

## Estado
Propuesta.

## Contexto y Declaración del Problema
La funcionalidad principal es habilitar a los administradores del sistema y a los clientes (PC y móvil) el acceso a los datos personales almacenados en la base de datos de Clientes. 
Junto al patrón **Strangler Application** para la transición gradual y necesitando una forma de gestionar y enrutar las solicitudes a los diferentes servicios (monolíticos y microservicios) de manera eficiente y escalable. Se decide utilizar el  patron **API Gateway**  para gestionar las solicitudes HTTP/REST y dirigirlas a los servicios correspondientes

## Drivers de Desicion
* Q-4

## Opciones Consideradas
- **Uso de un API Gateway** para gestionar el acceso y enrutar las solicitudes HTTP a los servicios correspondientes.
- **Comunicación directa entre servicios** sin un API Gateway centralizado, permitiendo que los clientes interactúen directamente con los microservicios.

## Resultado de la Decisión
**Opción elegida:** Implementar un **API Gateway** que gestione las solicitudes HTTP de clientes (PC y móvil) hacia los microservicios y servicios monolíticos. Este enfoque es consistente con la decisión de usar **Servicios REST** para la comunicación entre microservicios y permitirá una transición ordenada, minimizando la complejidad de manejar múltiples puntos de entrada.
* Reducción del impacto de cambios internos
* Flexibilidad para modificar y escalar microservicios individualmente

## Consecuencias
**Positivas, porque**:
- **Centralización** de la gestión de solicitudes y políticas de seguridad.
- Facilita la **escalabilidad** del sistema, permitiendo agregar más microservicios sin reconfigurar la infraestructura de los clientes.
- **Optimización del rendimiento** mediante balanceo de carga y control de tráfico.

**Negativas, porque**:
- **Punto único de fallo**: El API Gateway debe estar configurado para alta disponibilidad, ya que su fallo podría afectar la disponibilidad de los servicios.
- **Latencia adicional**: Introduce una capa adicional en el enrutamiento de las solicitudes, lo que podría generar una pequeña sobrecarga en el rendimiento.

